
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightNOTAND ASSIGN BOOL COMMA CONST DIVIDE DO ELSE END EQ FALSE GT ID IF INT INT_LITERAL LPAREN LT MINUS NEQ NOT OR PLUS PRINT RETURN RPAREN SEMICOLON STRING STRING_LITERAL SUBROUTINE THEN TIMES TRUE VOID WHILE\n    program : const_section var_section subroutine_section\n    \n    const_section : const_section const_declaration\n                  | empty\n    \n    const_declaration : CONST type ID ASSIGN expression SEMICOLON\n    \n    var_section : var_section var_declaration\n                | empty\n    \n    var_declaration : type ID ASSIGN expression SEMICOLON\n                    | type ID SEMICOLON\n    \n    subroutine_section : subroutine_section subroutine_decl\n                       | empty\n    \n    subroutine_decl : SUBROUTINE subroutine_type ID LPAREN param_list RPAREN DO statement_list END\n    \n    subroutine_type : VOID\n                    | INT\n                    | BOOL\n                    | STRING\n    \n    param_list : param_list COMMA param_decl\n               | param_decl\n               | empty\n    \n    param_decl : type ID\n    \n    statement_list : statement_list statement\n                   | empty\n    \n    statement : assignment_stmt\n              | if_stmt\n              | while_stmt\n              | return_stmt\n              | print_stmt\n              | call_stmt SEMICOLON\n    \n    assignment_stmt : ID ASSIGN expression SEMICOLON\n    \n    if_stmt : IF LPAREN expression RPAREN THEN statement_list else_part END\n    \n    else_part : ELSE statement_list\n              | empty\n    \n    while_stmt : WHILE LPAREN expression RPAREN DO statement_list END\n    \n    return_stmt : RETURN expression SEMICOLON\n    \n    print_stmt : PRINT LPAREN expression RPAREN SEMICOLON\n    \n    call_stmt : ID LPAREN arg_list RPAREN\n    \n    arg_list : arg_list COMMA expression\n             | expression\n             | empty\n    \n    expression : ID LPAREN arg_list RPAREN\n    \n    expression : expression PLUS expression\n               | expression MINUS expression\n               | expression TIMES expression\n               | expression DIVIDE expression\n               | expression EQ expression\n               | expression NEQ expression\n               | expression GT expression\n               | expression LT expression\n               | expression AND expression\n               | expression OR expression\n    \n    expression : NOT expression\n    \n    expression : LPAREN expression RPAREN\n    \n    expression : INT_LITERAL\n    \n    expression : STRING_LITERAL\n    \n    expression : TRUE\n               | FALSE\n    \n    expression : ID\n    \n    type : VOID\n         | INT\n         | BOOL\n         | STRING\n    empty :'
    
_lr_action_items = {'CONST':([0,2,3,5,54,],[-61,7,-3,-2,-4,]),'VOID':([0,2,3,4,5,6,7,9,18,27,39,41,54,74,],[-61,-61,-3,12,-2,-6,12,-5,22,-8,12,-7,-4,12,]),'INT':([0,2,3,4,5,6,7,9,18,27,39,41,54,74,],[-61,-61,-3,13,-2,-6,13,-5,23,-8,13,-7,-4,13,]),'BOOL':([0,2,3,4,5,6,7,9,18,27,39,41,54,74,],[-61,-61,-3,14,-2,-6,14,-5,24,-8,14,-7,-4,14,]),'STRING':([0,2,3,4,5,6,7,9,18,27,39,41,54,74,],[-61,-61,-3,15,-2,-6,15,-5,25,-8,15,-7,-4,15,]),'SUBROUTINE':([0,2,3,4,5,6,8,9,10,17,27,41,54,84,],[-61,-61,-3,-61,-2,-6,18,-5,-10,-9,-8,-7,-4,-11,]),'$end':([0,1,2,3,4,5,6,8,9,10,17,27,41,54,84,],[-61,0,-61,-3,-61,-2,-6,-1,-5,-10,-9,-8,-7,-4,-11,]),'ID':([11,12,13,14,15,16,21,22,23,24,25,26,28,32,33,40,42,43,44,45,46,47,48,49,50,51,58,77,78,81,82,85,86,87,88,89,90,94,96,97,98,99,100,102,107,109,114,115,116,117,118,120,122,123,124,],[19,-57,-58,-59,-60,20,29,-12,-13,-14,-15,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,75,30,-61,83,-21,-20,-22,-23,-24,-25,-26,30,30,30,-27,30,30,30,-33,-28,-61,-61,-34,83,83,-61,-32,-29,83,]),'ASSIGN':([19,20,83,],[26,28,96,]),'SEMICOLON':([19,30,31,34,35,36,37,38,53,62,63,64,65,66,67,68,69,70,71,72,76,91,101,103,110,113,],[27,-56,41,-52,-53,-54,-55,54,-50,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-51,-39,98,107,109,-35,116,]),'NOT':([26,28,32,33,40,42,43,44,45,46,47,48,49,50,51,77,94,96,97,99,100,102,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'LPAREN':([26,28,29,30,32,33,40,42,43,44,45,46,47,48,49,50,51,77,83,92,93,94,95,96,97,99,100,102,],[32,32,39,40,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,99,100,32,102,32,32,32,32,32,]),'INT_LITERAL':([26,28,32,33,40,42,43,44,45,46,47,48,49,50,51,77,94,96,97,99,100,102,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'STRING_LITERAL':([26,28,32,33,40,42,43,44,45,46,47,48,49,50,51,77,94,96,97,99,100,102,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TRUE':([26,28,32,33,40,42,43,44,45,46,47,48,49,50,51,77,94,96,97,99,100,102,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'FALSE':([26,28,32,33,40,42,43,44,45,46,47,48,49,50,51,77,94,96,97,99,100,102,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'PLUS':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,42,-52,-53,-54,-55,42,42,-50,42,-40,-41,-42,-43,42,42,42,42,42,42,-51,-39,42,42,42,42,42,42,]),'MINUS':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,43,-52,-53,-54,-55,43,43,-50,43,-40,-41,-42,-43,43,43,43,43,43,43,-51,-39,43,43,43,43,43,43,]),'TIMES':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,44,-52,-53,-54,-55,44,44,-50,44,44,44,-42,-43,44,44,44,44,44,44,-51,-39,44,44,44,44,44,44,]),'DIVIDE':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,45,-52,-53,-54,-55,45,45,-50,45,45,45,-42,-43,45,45,45,45,45,45,-51,-39,45,45,45,45,45,45,]),'EQ':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,46,-52,-53,-54,-55,46,46,-50,46,-40,-41,-42,-43,46,46,46,46,46,46,-51,-39,46,46,46,46,46,46,]),'NEQ':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,47,-52,-53,-54,-55,47,47,-50,47,-40,-41,-42,-43,47,47,47,47,47,47,-51,-39,47,47,47,47,47,47,]),'GT':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,48,-52,-53,-54,-55,48,48,-50,48,-40,-41,-42,-43,48,48,48,48,48,48,-51,-39,48,48,48,48,48,48,]),'LT':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,49,-52,-53,-54,-55,49,49,-50,49,-40,-41,-42,-43,49,49,49,49,49,49,-51,-39,49,49,49,49,49,49,]),'AND':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,50,-52,-53,-54,-55,50,50,-50,50,-40,-41,-42,-43,50,50,50,50,50,50,-51,-39,50,50,50,50,50,50,]),'OR':([30,31,34,35,36,37,38,52,53,60,62,63,64,65,66,67,68,69,70,71,72,76,80,101,103,105,106,108,],[-56,51,-52,-53,-54,-55,51,51,-50,51,-40,-41,-42,-43,51,51,51,51,51,51,-51,-39,51,51,51,51,51,51,]),'RPAREN':([30,34,35,36,37,39,40,52,53,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,80,97,104,105,106,108,],[-56,-52,-53,-54,-55,-61,-61,72,-50,73,-17,-18,76,-37,-38,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-51,-19,-39,-16,-36,-61,110,111,112,113,]),'COMMA':([30,34,35,36,37,39,40,53,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,80,97,104,],[-56,-52,-53,-54,-55,-61,-61,-50,74,-17,-18,77,-37,-38,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-51,-19,-39,-16,-36,-61,77,]),'DO':([73,112,],[78,115,]),'END':([78,81,82,85,86,87,88,89,90,98,107,109,114,115,116,117,118,119,120,121,122,123,124,],[-61,84,-21,-20,-22,-23,-24,-25,-26,-27,-33,-28,-61,-61,-34,-61,122,123,-61,-31,-32,-29,-30,]),'IF':([78,81,82,85,86,87,88,89,90,98,107,109,114,115,116,117,118,120,122,123,124,],[-61,92,-21,-20,-22,-23,-24,-25,-26,-27,-33,-28,-61,-61,-34,92,92,-61,-32,-29,92,]),'WHILE':([78,81,82,85,86,87,88,89,90,98,107,109,114,115,116,117,118,120,122,123,124,],[-61,93,-21,-20,-22,-23,-24,-25,-26,-27,-33,-28,-61,-61,-34,93,93,-61,-32,-29,93,]),'RETURN':([78,81,82,85,86,87,88,89,90,98,107,109,114,115,116,117,118,120,122,123,124,],[-61,94,-21,-20,-22,-23,-24,-25,-26,-27,-33,-28,-61,-61,-34,94,94,-61,-32,-29,94,]),'PRINT':([78,81,82,85,86,87,88,89,90,98,107,109,114,115,116,117,118,120,122,123,124,],[-61,95,-21,-20,-22,-23,-24,-25,-26,-27,-33,-28,-61,-61,-34,95,95,-61,-32,-29,95,]),'ELSE':([82,85,86,87,88,89,90,98,107,109,114,116,117,122,123,],[-21,-20,-22,-23,-24,-25,-26,-27,-33,-28,-61,-34,120,-32,-29,]),'THEN':([111,],[114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'const_section':([0,],[2,]),'empty':([0,2,4,39,40,78,97,114,115,117,120,],[3,6,10,57,61,82,61,82,82,121,82,]),'var_section':([2,],[4,]),'const_declaration':([2,],[5,]),'subroutine_section':([4,],[8,]),'var_declaration':([4,],[9,]),'type':([4,7,39,74,],[11,16,58,58,]),'subroutine_decl':([8,],[17,]),'subroutine_type':([18,],[21,]),'expression':([26,28,32,33,40,42,43,44,45,46,47,48,49,50,51,77,94,96,97,99,100,102,],[31,38,52,53,60,62,63,64,65,66,67,68,69,70,71,80,101,103,60,105,106,108,]),'param_list':([39,],[55,]),'param_decl':([39,74,],[56,79,]),'arg_list':([40,97,],[59,104,]),'statement_list':([78,114,115,120,],[81,117,118,124,]),'statement':([81,117,118,124,],[85,85,85,85,]),'assignment_stmt':([81,117,118,124,],[86,86,86,86,]),'if_stmt':([81,117,118,124,],[87,87,87,87,]),'while_stmt':([81,117,118,124,],[88,88,88,88,]),'return_stmt':([81,117,118,124,],[89,89,89,89,]),'print_stmt':([81,117,118,124,],[90,90,90,90,]),'call_stmt':([81,117,118,124,],[91,91,91,91,]),'else_part':([117,],[119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> const_section var_section subroutine_section','program',3,'p_program','compilador_minilang.py',214),
  ('const_section -> const_section const_declaration','const_section',2,'p_const_section','compilador_minilang.py',221),
  ('const_section -> empty','const_section',1,'p_const_section','compilador_minilang.py',222),
  ('const_declaration -> CONST type ID ASSIGN expression SEMICOLON','const_declaration',6,'p_const_declaration','compilador_minilang.py',231),
  ('var_section -> var_section var_declaration','var_section',2,'p_var_section','compilador_minilang.py',238),
  ('var_section -> empty','var_section',1,'p_var_section','compilador_minilang.py',239),
  ('var_declaration -> type ID ASSIGN expression SEMICOLON','var_declaration',5,'p_var_declaration','compilador_minilang.py',248),
  ('var_declaration -> type ID SEMICOLON','var_declaration',3,'p_var_declaration','compilador_minilang.py',249),
  ('subroutine_section -> subroutine_section subroutine_decl','subroutine_section',2,'p_subroutine_section','compilador_minilang.py',259),
  ('subroutine_section -> empty','subroutine_section',1,'p_subroutine_section','compilador_minilang.py',260),
  ('subroutine_decl -> SUBROUTINE subroutine_type ID LPAREN param_list RPAREN DO statement_list END','subroutine_decl',9,'p_subroutine_decl','compilador_minilang.py',269),
  ('subroutine_type -> VOID','subroutine_type',1,'p_subroutine_type','compilador_minilang.py',275),
  ('subroutine_type -> INT','subroutine_type',1,'p_subroutine_type','compilador_minilang.py',276),
  ('subroutine_type -> BOOL','subroutine_type',1,'p_subroutine_type','compilador_minilang.py',277),
  ('subroutine_type -> STRING','subroutine_type',1,'p_subroutine_type','compilador_minilang.py',278),
  ('param_list -> param_list COMMA param_decl','param_list',3,'p_param_list','compilador_minilang.py',284),
  ('param_list -> param_decl','param_list',1,'p_param_list','compilador_minilang.py',285),
  ('param_list -> empty','param_list',1,'p_param_list','compilador_minilang.py',286),
  ('param_decl -> type ID','param_decl',2,'p_param_decl','compilador_minilang.py',297),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','compilador_minilang.py',303),
  ('statement_list -> empty','statement_list',1,'p_statement_list','compilador_minilang.py',304),
  ('statement -> assignment_stmt','statement',1,'p_statement','compilador_minilang.py',313),
  ('statement -> if_stmt','statement',1,'p_statement','compilador_minilang.py',314),
  ('statement -> while_stmt','statement',1,'p_statement','compilador_minilang.py',315),
  ('statement -> return_stmt','statement',1,'p_statement','compilador_minilang.py',316),
  ('statement -> print_stmt','statement',1,'p_statement','compilador_minilang.py',317),
  ('statement -> call_stmt SEMICOLON','statement',2,'p_statement','compilador_minilang.py',318),
  ('assignment_stmt -> ID ASSIGN expression SEMICOLON','assignment_stmt',4,'p_assignment_stmt','compilador_minilang.py',324),
  ('if_stmt -> IF LPAREN expression RPAREN THEN statement_list else_part END','if_stmt',8,'p_if_stmt','compilador_minilang.py',330),
  ('else_part -> ELSE statement_list','else_part',2,'p_else_part','compilador_minilang.py',336),
  ('else_part -> empty','else_part',1,'p_else_part','compilador_minilang.py',337),
  ('while_stmt -> WHILE LPAREN expression RPAREN DO statement_list END','while_stmt',7,'p_while_stmt','compilador_minilang.py',346),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt','compilador_minilang.py',352),
  ('print_stmt -> PRINT LPAREN expression RPAREN SEMICOLON','print_stmt',5,'p_print_stmt','compilador_minilang.py',358),
  ('call_stmt -> ID LPAREN arg_list RPAREN','call_stmt',4,'p_call_stmt','compilador_minilang.py',365),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','compilador_minilang.py',372),
  ('arg_list -> expression','arg_list',1,'p_arg_list','compilador_minilang.py',373),
  ('arg_list -> empty','arg_list',1,'p_arg_list','compilador_minilang.py',374),
  ('expression -> ID LPAREN arg_list RPAREN','expression',4,'p_expression_call','compilador_minilang.py',388),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','compilador_minilang.py',395),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','compilador_minilang.py',396),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','compilador_minilang.py',397),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','compilador_minilang.py',398),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','compilador_minilang.py',399),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','compilador_minilang.py',400),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','compilador_minilang.py',401),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','compilador_minilang.py',402),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','compilador_minilang.py',403),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','compilador_minilang.py',404),
  ('expression -> NOT expression','expression',2,'p_expression_unop','compilador_minilang.py',410),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','compilador_minilang.py',416),
  ('expression -> INT_LITERAL','expression',1,'p_expression_int','compilador_minilang.py',422),
  ('expression -> STRING_LITERAL','expression',1,'p_expression_string','compilador_minilang.py',428),
  ('expression -> TRUE','expression',1,'p_expression_bool','compilador_minilang.py',434),
  ('expression -> FALSE','expression',1,'p_expression_bool','compilador_minilang.py',435),
  ('expression -> ID','expression',1,'p_expression_varref','compilador_minilang.py',442),
  ('type -> VOID','type',1,'p_type','compilador_minilang.py',448),
  ('type -> INT','type',1,'p_type','compilador_minilang.py',449),
  ('type -> BOOL','type',1,'p_type','compilador_minilang.py',450),
  ('type -> STRING','type',1,'p_type','compilador_minilang.py',451),
  ('empty -> <empty>','empty',0,'p_empty','compilador_minilang.py',456),
]
